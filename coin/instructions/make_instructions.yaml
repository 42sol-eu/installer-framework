type: Group
instructions:
  - type: Group
    instructions:
      - type: ExecuteCommand
        command: Mingw32-make
        maxTimeInSeconds: 36000
        maxTimeBetweenOutput: 3600
        userMessageOnFailure: "Failed to run make, check logs."
      - type: ExecuteCommand
        command: "Mingw32-make -j1 install INSTALL_ROOT={{.InstallRoot}}"
        maxTimeInSeconds: 1800
        maxTimeBetweenOutput: 600
        userMessageOnFailure: "Failed to run make install, check logs."
    enable_if:
      condition: and
      conditions:
        - condition: property
          property: host.os
          equals_value: Windows
        - condition: property
          property: target.compiler
          in_values: [Mingw53, Mingw73, Clang]

  - type: Group
    instructions:
      - type: ExecuteCommand
        command: make
        maxTimeInSeconds: 36000
        maxTimeBetweenOutput: 3600
        userMessageOnFailure: "Failed to run make, check logs."
      - type: ExecuteCommand
        command: ['make', 'html_docs']
        maxTimeInSeconds: 36000
        maxTimeBetweenOutput: 3600
        userMessageOnFailure: 'Could not build documentation.'
      - type: UploadArtifact
        archiveDirectory: '{{.BuildDir}}/doc'
        transferType: UploadModuleDocumentation
        maxTimeInSeconds: 1800
        maxTimeBetweenOutput: 1800
      - type: ExecuteCommand
        command: "make install INSTALL_ROOT={{.InstallRoot}}"
        maxTimeInSeconds: 1800
        maxTimeBetweenOutput: 600
        userMessageOnFailure: "Failed to run install, check logs."
    enable_if:
      condition: and
      conditions:
        - condition: property
          property: host.os
          not_equals_value: Windows
        - condition: property
          property: target.compiler
          in_values: [GCC, Clang, ICC_17, ICC_18]

  - type: Group
    instructions:
      - type: ExecuteCommand
        command: "jom"
        maxTimeInSeconds: 36000
        maxTimeBetweenOutput: 3600
        userMessageOnFailure: "Failed to run jom/make, check logs."
      - !include "{{installer-framework/installer-framework}}/make_win_docs_instructions.yaml"
      - type: ExecuteCommand
        command: "nmake install INSTALL_ROOT={{.InstallRoot}}"
        maxTimeInSeconds: 1800
        maxTimeBetweenOutput: 600
        userMessageOnFailure: "Failed to run nmake install, check logs."
    enable_if:
      condition: property
      property: target.compiler
      in_values: [MSVC2013, MSVC2015, MSVC2017, MSVC2019]

  - type: Group
    instructions:
      - type: ChangeDirectory
        directory: "{{.InstallRoot}}/{{.AgentWorkingDir}}"
      - type: ExecuteCommand
        command: "python3 {{.SourceDir}}/coin/create_ifw_installer.py --src-dir {{.SourceDir}} --bld-dir {{.SourceDir}} --target-dir {{.SourceDir}}/IfwInstaller --target-name QtInstallerFramework-linux-x64-4.5.2.run"
        maxTimeInSeconds: 36000
        maxTimeBetweenOutput: 3600
        userMessageOnFailure: "Failed to create ifw installer."
      - type: Rename
        sourcePath: "{{.SourceDir}}/IfwInstaller/QtInstallerFramework-linux-x64-4.5.2.run"
        targetPath: "{{.InstallRoot}}/{{.AgentWorkingDir}}/QtInstallerFramework-linux-x64-4.5.2.run"
        userMessageOnFailure: "Failed to copy installer."
    enable_if:
      condition: and
      conditions:
        - condition: property
          property: host.os
          equals_value: Linux

  - type: Group
    instructions:
      - type: ChangeDirectory
        directory: "{{.InstallRoot}}/{{.AgentWorkingDir}}"
      - type: ExecuteCommand
        command: "python3 {{.SourceDir}}/coin/create_ifw_installer.py --src-dir {{.SourceDir}} --bld-dir {{.SourceDir}} --target-dir {{.SourceDir}}/IfwInstaller --target-name QtInstallerFramework-macOS-x64-4.5.2.app"
        maxTimeInSeconds: 36000
        maxTimeBetweenOutput: 3600
        userMessageOnFailure: "Failed to create ifw installer."
      - type: EnvironmentVariable
        variableName: QT_CODESIGN_IDENTITY_KEY
        variableValue: "A5GTH44LYL"
      - type: ChangeDirectory
        directory: "{{.AgentWorkingDir}}/qtsdk/qtsdk/packaging-tools"
      - type: ExecuteCommand
        command: "python3 -m pip install pipenv==2022.4.8 --user"
        maxTimeInSeconds: 1800
        maxTimeBetweenOutput: 600
        userMessageOnFailure: "Failed to install Pipenv"
      - type: ExecuteCommand
        command: "python3 -m pipenv install --skip-lock"
        maxTimeInSeconds: 1800
        maxTimeBetweenOutput: 600
        userMessageOnFailure: "Failed to install Pipenv requirements"
      - type: ExecuteCommand
        command: "python3 -m pipenv run python sign_installer.py mac --file={{.SourceDir}}/IfwInstaller/QtInstallerFramework-macOS-x64-4.5.2.app"
        maxTimeInSeconds: 36000
        maxTimeBetweenOutput: 3600
        userMessageOnFailure: "Failed to sign the ifw installer"
      - type: ExecuteCommand
        command: "python3 -m pipenv run python notarize.py --dmg={{.SourceDir}}/IfwInstaller/QtInstallerFramework-macOS-x64-4.5.2.dmg"
        maxTimeInSeconds: 36000
        maxTimeBetweenOutput: 3600
        userMessageOnFailure: "Failed to notarize the ifw installer"
      - type: Rename
        sourcePath: "{{.SourceDir}}/IfwInstaller/QtInstallerFramework-macOS-x64-4.5.2.dmg"
        targetPath: "{{.InstallRoot}}/{{.AgentWorkingDir}}/QtInstallerFramework-macOS-x64-4.5.2.dmg"
        userMessageOnFailure: "Failed to copy installer."
    enable_if:
      condition: and
      conditions:
        - condition: property
          property: host.os
          equals_value: MacOS

  - type: Group
    instructions:
      - type: ChangeDirectory
        directory: "{{.SourceDir}}"
      - type: ExecuteCommand
        command: "{{.Env.PYTHON3_PATH}}\\python {{.SourceDir}}\\coin\\create_ifw_installer.py --src-dir {{.SourceDir}} --bld-dir {{.SourceDir}} --target-dir C:\\{{.SourceDir}}\\IfwInstaller  --target-name QtInstallerFramework-windows-x64-4.5.2"
        maxTimeInSeconds: 1200
        maxTimeBetweenOutput: 1200
        userMessageOnFailure: "Failed to create ifw installer."
    enable_if:
      condition: and
      conditions:
        - condition: property
          property: host.os
          equals_value: Windows

  - type: SignPackage
    directory: "{{.SourceDir}}/IfwInstaller"
    maxTimeInSeconds: 1200
    maxTimeBetweenOutput: 1200
    enable_if:
      condition: property
      property: host.os
      equals_value: Windows

  - type: Rename
    sourcePath: "{{.SourceDir}}/IfwInstaller/QtInstallerFramework-windows-x64-4.5.2.exe"
    targetPath: "{{.InstallRoot}}/{{.AgentWorkingDir}}/QtInstallerFramework-windows-x64-4.5.2.exe"
    userMessageOnFailure: "Failed to copy installer."
    enable_if:
      condition: property
      property: host.os
      equals_value: Windows

  - type: Rename
    sourcePath: "{{.SourceDir}}/dist/packages/org.qtproject.ifw.binaries/data/data.7z"
    targetPath: "{{.InstallRoot}}/{{.AgentWorkingDir}}/ifw_data.7z"
    userMessageOnFailure: "Failed to copy IFW binary archive."

  - type: UploadArtifact
    archiveDirectory: "{{.InstallRoot}}/{{.AgentWorkingDir}}"
    transferType: UploadModuleBuildArtifact
    maxTimeInSeconds: 1800
    maxTimeBetweenOutput: 1800
